generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Category {
  id        Int     @id @default(autoincrement())
  title String
  products Product[]
}

model Cart {
  id String @id @default(uuid())
  userId Int?
  createdAt DateTime
  updatedAt DateTime?
  cartItems CartItem[]
}

model CartItem {
  id Int @id @default(autoincrement())
  quantity Int
  productVariantId Int
  productVariant ProductVariant @relation(fields: [productVariantId], references: [id])
  cartId String
  cart Cart @relation(fields: [cartId], references: [id])
  @@unique([productVariantId, cartId])
}
model Product {
  id    Int     @id @default(autoincrement())
  name  String
  slug  String @unique
  price Float
  description String
  starRating Float
  discountRate Int
  productColorImages ProductColorImage[]
  variants ProductVariant[]
  categoryId Int
  category Category @relation(fields: [categoryId], references: [id])
}

model ProductVariant{
  id Int @id @default(autoincrement())
  size String
  productId Int
  stock Int
  colorId Int
  color Color @relation(fields: [colorId], references: [id])
  product Product @relation(fields: [productId], references: [id])
  CartItem CartItem[]
  @@unique([productId, size, colorId])
}
model Color {
  id Int @id @default(autoincrement())
  name String
  productVariants ProductVariant[]
  productColorImages ProductColorImage[]
}

model ProductColorImage{
  id Int @id @default(autoincrement())
  productId Int
  product Product @relation(fields: [productId], references: [id])
  colorId Int
  color Color @relation(fields: [colorId], references: [id])
  imagePath String
  @@unique([productId, colorId, imagePath])
}

model account{
  id String @id @default(uuid())
  email String @unique
  password String?
  cpf String @unique
  isGuest Boolean @default(true)
  fullName String
  birthDate DateTime
  phone String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}